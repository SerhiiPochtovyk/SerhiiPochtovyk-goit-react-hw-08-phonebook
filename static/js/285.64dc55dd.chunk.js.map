{"version":3,"file":"static/js/285.64dc55dd.chunk.js","mappings":"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","sources":["pages/Register.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { registerUserThunk } from 'redux/auth/operations';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport img_1 from '../images/img_1.jpg';\nimport { FcCellPhone } from \"react-icons/fc\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const submit = async data => {\n    try {\n      await dispatch(registerUserThunk(data)).unwrap();\n      Notify.success(`${data.name}, welcome to your Phonebook!`);\n      navigate('/contacts');\n    } catch (error) {\n      Notify.failure('Sorry, registration failed');\n    }\n    reset();\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/contacts');\n    }\n  }, [navigate, isLoggedIn]);\n\n  return (\n    <div className=\"bg-cover bg-center min-h-screen flex items-center justify-center flex-wrap relative transition duration-150 ease-in-out \">\n      <div\n        className=\"absolute inset-0 bg-cover bg-center min-h-screen flex items-center justify-center \"\n        style={{\n          backgroundImage: `url(${img_1})`,\n          filter: 'blur(8px)',\n          opacity: '0.7',\n        }}\n      />\n\n      <div className=\" bg-white text-center p-6 rounded-md max-w-md w-full m-4 relative z-10 border-solid border-2 border-sky-500 \">\n        <form onSubmit={handleSubmit(submit)} className=\"\">\n          <FcCellPhone\n            size={60}\n            style={{\n              color: '#fda403',\n              margin: '0 auto',\n              marginBottom: '16px',\n            }}\n          />\n          <input\n            {...register('name', { required: 'This field is required' })}\n            className={`input input-bordered input-info w-full max-w-xs mb-6 ${\n              errors.name ? 'border-red-500' : ''\n            }`}\n            placeholder=\"Name\"\n          />\n          <p className=\"text-red-500 text-sm\">{errors.name?.message}</p>\n          <input\n            {...register('email', { required: 'This field is required' })}\n            className={`input input-bordered input-info w-full max-w-xs mb-6 ${\n              errors.email ? 'border-red-500' : ''\n            }`}\n            placeholder=\"Email\"\n          />\n          <p className=\"text-red-500 text-sm\">{errors.email?.message}</p>\n          <input\n            type=\"password\"\n            {...register('password', { required: 'This field is required' })}\n            className={`input input-bordered input-info w-full max-w-xs mb-6 ${\n              errors.password ? 'border-red-500' : ''\n            }`}\n            placeholder=\"Password\"\n          />\n          <p className=\"text-red-500 text-sm\">{errors.password?.message}</p>\n          <button\n            type=\"submit\"\n            className=\"mx-auto px-6 py-2 bg-sky-500 text-white p-2 flex items-center justify-center hover:bg-sky-600 rounded-lg transition-all duration-300 ease-in-out cursor-pointer\"\n          >\n            Register\n          </button>\n          <p className=\"mt-2 text-sm text-[16px] \">\n            Already have an account?\n            <span className=\" ml-2 text-sky-500 underline decoration-1 hover:text-yellow-500 text-[16px] transition-all duration-300 ease-in-out cursor-pointer\">\n              <Link to=\"/login\">Login</Link>\n            </span>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["_errors$name","_errors$email","_errors$password","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","submit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","registerUserThunk","unwrap","Notify","concat","name","t0","stop","_x","apply","arguments","useEffect","_jsxs","className","children","_jsx","style","backgroundImage","img_1","filter","opacity","onSubmit","FcCellPhone","size","color","margin","marginBottom","_objectSpread","required","placeholder","message","email","type","password","Link","to"],"sourceRoot":""}